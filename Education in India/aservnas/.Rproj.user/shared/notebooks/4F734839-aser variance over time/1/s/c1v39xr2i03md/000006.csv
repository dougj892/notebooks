"0","state_lags <- states %>%"
"0","  group_by(State) %>%"
"0","  mutate(read_lag1 = lag(std3_reading, order_by = year),"
"0","         read_lag2 = lag(std3_reading, n= 2, order_by = year),"
"0","         read_lag3 = lag(std3_reading, n =3, order_by = year),"
"0","         read_lag4 = lag(std3_reading, n =4, order_by = year),"
"0","         read_lag5 = lag(std3_reading, n =5, order_by = year)) %>%"
"0","  ungroup()"
"0",""
"0","rho = c()"
"0","# for each of the lags, calculate the correlation between current and the lag and store in vector rho"
"0","for (lag in seq(1,5)) {"
"0","  rho <- c(rho, cor(state_lags$std3_reading, state_lags[[paste(""read_lag"",as.character(lag),sep="""")]], use = ""pairwise.complete.obs""))"
"0","}"
"0","# Calculate variance of the transitory component by comparing rho_1 with the decay of rho after that"
"0","var_state_levels_persistent2 <- rho[1]/mean(rho/lag(rho), na.rm = TRUE)*var_state_levels"
"0",""
"0","# Calculate the share of variance coming from other transitory sources."
"0","# We will need this to calculate the variance breakup for changes"
"0","var_state_levels_other2 <- var_state_levels - var_state_levels_persistent2 - var_state_sampling"
"0",""
"0","# Save a graph showing the decay of the correlation"
"0","quick_df <- tibble(lag = seq(0,5), correlation = c(1,rho))"
"0","ggplot(quick_df, aes(x= lag, y = correlation)) + "
"0","  geom_line() +"
"0","  geom_point() +"
"0","  ylim(0,1)"
