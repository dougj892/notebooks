lag(x)
lag(x,2)
x <- c(1,2,3,4)
lag(x)
library(tidyverse)
x <- seq(1,10)
x
y <- lag(x)
y
library(tidyverse)
data_path <- "C:/Users/dougj/Documents/Data/Education"
states <- read_csv(file.path(data_path, "ASER trends over time", "aser_trends.csv"))
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states_temp <- states %>% filter(State != "madhyapradesh")
# "std3_read_std1_all" "std5_read_std2_all" "std3_subtract_all"  "std5_divis_all"
model <- lm(std3_read_std1_all ~ 0+state_factor + pvt, data = states_temp)
model_tidy<- tidy(model)
library(tidyverse)
library(broom)
data_path <- "C:/Users/dougj/Documents/Data/Education"
states <- read_csv(file.path(data_path, "ASER trends over time", "aser_trends.csv"))
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states_temp <- states %>% filter(State != "madhyapradesh")
# "std3_read_std1_all" "std5_read_std2_all" "std3_subtract_all"  "std5_divis_all"
model <- lm(std3_read_std1_all ~ 0+state_factor + pvt, data = states_temp)
model_tidy<- tidy(model)
model_tidy %>% filter(term == "pvt")
# try to do the same with the plm package
library(plm)
fd_model <- plm(std3_read_std1_all ~ pvt, index = c("State", "year"), data = states, model = "fd")
fd_model_tidy <- tidy(fd_model)
# states$predicted <- predict(fd_model)
residuals <- resid(fd_model)
library(tidyverse)
library(broom)
data_path <- "C:/Users/dougj/Documents/Data/Education"
states <- read_csv(file.path(data_path, "ASER trends over time", "aser_trends.csv"))
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states_temp <- states %>% filter(State != "madhyapradesh")
# "std3_read_std1_all" "std5_read_std2_all" "std3_subtract_all"  "std5_divis_all"
model <- lm(std3_read_std1_all ~ 0+state_factor + pvt, data = states_temp)
model_tidy<- tidy(model)
model_tidy %>% filter(term == "pvt")
# try to do the same with the plm package
library(plm)
fd_model <- plm(std3_read_std1_all ~ pvt, index = c("State", "year"), data = states, model = "fd")
fd_model_tidy <- tidy(fd_model)
# states$predicted <- predict(fd_model)
residuals <- resid(fd_model)
residuals
length(residuals)
length(residuals)$names
residuals$names
attributes(residuals)
as.numeric(attributes(residuals))
as.numeric(attributes(residuals)$name)
as.numeric(attributes(residuals)$name) -> x
x
str(x)
lag(x)
x <- seq(1,10)
x
lag(x)
?lag
dplyr::lag(x)
as.numeric(attributes(residuals)$name) -> x
dplyr::lag(x)
x- dplyr::lag(x)
x- dplyr::lag(x) -> skips
x[skips > 1]
x[skips > 1]-1
View(states)
states_slim <- states %>% select(State, year, std3_read_std1_all, pvt)
View(states_slim)
View(states_slim)
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states_temp <- states %>% filter(State != "madhyapradesh")
# "std3_read_std1_all" "std5_read_std2_all" "std3_subtract_all"  "std5_divis_all"
model <- lm(std3_read_std1_all ~ 0+state_factor + pvt, data = states_temp)
model_tidy<- tidy(model)
model_tidy %>% filter(term == "pvt")
# try to do the same with the plm package
library(plm)
fd_model <- plm(std3_read_std1_all ~ pvt, index = c("State", "year"), data = states, model = "within")
fd_model_tidy <- tidy(fd_model)
# states$predicted <- predict(fd_model)
residuals <- resid(fd_model)
length(residuals)
# states$predicted <- predict(fd_model)
augment(fd_model)
library(tidyverse)
library(broom)
data_path <- "C:/Users/dougj/Documents/Data/Education"
states <- read_csv(file.path(data_path, "ASER trends over time", "aser_trends.csv"))
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states_temp <- states %>% filter(State != "madhyapradesh")
# "std3_read_std1_all" "std5_read_std2_all" "std3_subtract_all"  "std5_divis_all"
model <- lm(std3_read_std1_all ~ 0+state_factor + pvt, data = states_temp)
model_tidy<- tidy(model)
model_tidy %>% filter(term == "pvt")
# try to do the same with the plm package
library(plm)
fd_model <- plm(std3_read_std1_all ~ pvt, index = c("State", "year"), data = states, model = "within")
fd_model_tidy <- tidy(fd_model)
# states$predicted <- predict(fd_model)
augment(fd_model)
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states_temp <- states %>% filter(State != "madhyapradesh")
# "std3_read_std1_all" "std5_read_std2_all" "std3_subtract_all"  "std5_divis_all"
model <- lm(std3_read_std1_all ~ 0+state_factor + pvt, data = states_temp)
model_tidy<- tidy(model)
model_tidy %>% filter(term == "pvt")
# try to do the same with the plm package
library(plm)
fd_model <- plm(std3_read_std1_all ~ pvt, index = c("State", "year"), data = states, model = "within")
fd_model_tidy <- tidy(fd_model)
# states$predicted <- predict(fd_model)
augmented <- augment(fd_model)
augmented
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states_temp <- states %>% filter(State != "madhyapradesh")
# "std3_read_std1_all" "std5_read_std2_all" "std3_subtract_all"  "std5_divis_all"
model <- lm(std3_read_std1_all ~ 0+state_factor + pvt, data = states_temp)
model_tidy<- tidy(model)
model_tidy %>% filter(term == "pvt")
augmented1 <-augment(model)
# try to do the same with the plm package
library(plm)
fd_model <- plm(std3_read_std1_all ~ pvt, index = c("State", "year"), data = states, model = "within")
fd_model_tidy <- tidy(fd_model)
# states$predicted <- predict(fd_model)
augmented <- augment(fd_model)
augmented1
names(augmented1)
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states_temp <- states %>% filter(State != "madhyapradesh")
# "std3_read_std1_all" "std5_read_std2_all" "std3_subtract_all"  "std5_divis_all"
model <- lm(std3_read_std1_all ~ 0+state_factor + pvt, data = states_temp)
model_tidy<- tidy(model)
model_tidy %>% filter(term == "pvt")
aug1 <-augment(model)
# Calculate autocorrelation of the residuals
aug1 <- aug1 %>%
mutate(lag_resid = dplyr::lag(.resid, order_by = c("state_factor", "year")))
aug1 <- aug1 %>%
mutate(resid = .resid)
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states_temp <- states %>% filter(State != "madhyapradesh")
# "std3_read_std1_all" "std5_read_std2_all" "std3_subtract_all"  "std5_divis_all"
model <- lm(std3_read_std1_all ~ 0+state_factor + pvt, data = states_temp)
model_tidy<- tidy(model)
model_tidy %>% filter(term == "pvt")
aug1 <-augment(model)
# Calculate autocorrelation of the residuals
aug1 <- aug1 %>%
mutate(resid = .resid) %>%
mutate(lag_resid = dplyr::lag(.resid, order_by = c("state_factor", "year")))
lag(aug1$resid)
aug1 <- aug1 %>%
mutate(resid = .resid)
names(aug`1`
names(aug1)
aug1$resid
lag(aug1$resid)
dplyr::lag(aug1$resid)
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states_temp <- states %>% filter(State != "madhyapradesh")
# "std3_read_std1_all" "std5_read_std2_all" "std3_subtract_all"  "std5_divis_all"
model <- lm(std3_read_std1_all ~ 0+state_factor + pvt, data = states_temp)
model_tidy<- tidy(model)
model_tidy %>% filter(term == "pvt")
aug1 <-augment(model)
# Calculate autocorrelation of the residuals
aug1 <- aug1 %>%
mutate(resid = .resid) %>%
mutate(lag_resid = dplyr::lag(resid, order_by = c("state_factor", "year")))
dplyr::lag(aug1$resid)
dplyr::lag(aug1$resid)
aug1 <- aug1 %>%
mutate(resid = .resid)
dplyr::lag(aug1$resid)
dplyr::lag(aug1$resid, order_by = c("state_factor", "year"))
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states_temp <- states %>% filter(State != "madhyapradesh")
# "std3_read_std1_all" "std5_read_std2_all" "std3_subtract_all"  "std5_divis_all"
model <- lm(std3_read_std1_all ~ 0+state_factor + pvt, data = states_temp)
model_tidy<- tidy(model)
model_tidy %>% filter(term == "pvt")
aug1 <-augment(model)
# Calculate autocorrelation of the residuals
aug1 <- aug1 %>%
mutate(resid = .resid) %>%
group_by(state_factor) %>%
mutate(lag_resid = dplyr::lag(resid, order_by = c("state_factor", "year")))
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states_temp <- states %>% filter(State != "madhyapradesh")
# "std3_read_std1_all" "std5_read_std2_all" "std3_subtract_all"  "std5_divis_all"
model <- lm(std3_read_std1_all ~ 0+state_factor + pvt, data = states_temp)
model_tidy<- tidy(model)
model_tidy %>% filter(term == "pvt")
aug1 <-augment(model)
# Calculate autocorrelation of the residuals
aug1 <- aug1 %>%
mutate(resid = .resid) %>%
group_by(state_factor) %>%
mutate(lag_resid = dplyr::lag(resid, order_by = year))
aug1
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states_temp <- states %>% filter(State != "madhyapradesh")
# "std3_read_std1_all" "std5_read_std2_all" "std3_subtract_all"  "std5_divis_all"
model <- lm(std3_read_std1_all ~ 0+state_factor + year_factor + pvt, data = states_temp)
model_tidy<- tidy(model)
model_tidy %>% filter(term == "pvt")
aug1 <-augment(model)
# Calculate autocorrelation of the residuals
aug1 <- aug1 %>%
mutate(resid = .resid) %>%
group_by(state_factor) %>%
mutate(lag_resid = dplyr::lag(resid, order_by = year_factor))
# try to do the same with the plm package
library(plm)
fd_model <- plm(std3_read_std1_all ~ pvt, index = c("State", "year"), data = states, model = "within")
fd_model_tidy <- tidy(fd_model)
# states$predicted <- predict(fd_model)
augmented2 <- augment(fd_model)
aug1
?corr
??correlation
?cor
cor(aug1$resid, aug1$lag_resid, na.rm = TRUE)
cor(aug1$resid, aug1$lag_resid)
cor(aug1$resid, aug1$lag_resid, use = "pairwise.complete.obs"
)
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states_temp <- states %>% filter(State != "madhyapradesh")
# "std3_read_std1_all" "std5_read_std2_all" "std3_subtract_all"  "std5_divis_all"
model <- lm(std3_read_std1_all ~ 0+state_factor + year_factor + pvt, data = states_temp)
model_tidy<- tidy(model)
model_tidy %>% filter(term == "pvt")
aug1 <-augment(model)
# Calculate autocorrelation of the residuals
aug1 <- aug1 %>%
mutate(resid = .resid) %>%
group_by(state_factor) %>%
mutate(lag_resid = dplyr::lag(resid, order_by = year_factor))
# try to do the same with the plm package
library(plm)
fd_model <- plm(std3_read_std1_all ~ pvt, index = c("State", "year"), data = states, model = "within")
fd_model_tidy <- tidy(fd_model)
# states$predicted <- predict(fd_model)
augmented2 <- augment(fd_model)
names(states)
str_detect(names(states), "^std")
str_extract(names(states), "^std")
str_locate(names(states), "^std")
str_match(names(states), "^std")
str_subset(names(states), "^std")
str_subset(names(states), "^std.*all$")
library(tidyverse)
library(plm)
library(broom)
data_path <- "C:/Users/dougj/Documents/Data/Education"
states <- read_csv(file.path(data_path, "ASER trends over time", "aser_trends.csv"))
outcomes <- str_subset(names(states), "^std.*all$")
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states <- states %>% filter
for (y in outcomes) {
fit_no_mp <- plm(y ~ state_factor + year_factor + pvt, data = states, subset = (State != "madhyapradesh"))
summary(fit_no_mp)
}
outcomes <- str_subset(names(states), "^std.*all$")
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states <- states %>% filter
for (y in outcomes) {
fit_no_mp <- plm(y ~ state_factor + year_factor + pvt, data = states)
summary(fit_no_mp)
}
y[1]
outcomes <- str_subset(names(states), "^std.*all$")
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states <- states %>% filter
for (y in outcomes) {
fit_no_mp <- plm(states[y] ~ state_factor + year_factor + pvt, data = states, subset = (State != "madhyapradesh"))
summary(fit_no_mp)
}
y
states[y]
outcomes <- str_subset(names(states), "^std.*all$")
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states <- states %>% filter
for (y in outcomes) {
rx <- paste(y, "~ state_factor + year_factor + pvt")
fit_no_mp <- plm(rx, data = states, subset = (State != "madhyapradesh"))
summary(fit_no_mp)
}
outcomes <- str_subset(names(states), "^std.*all$")
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states <- states %>% filter
for (y in outcomes) {
rx <- paste(y, "~ state_factor + year_factor + pvt")
fit_no_mp <- plm(rx, data = states, subset = (State != "madhyapradesh"), index = state_factor)
summary(fit_no_mp)
}
outcomes <- str_subset(names(states), "^std.*all$")
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states <- states %>% filter
for (y in outcomes) {
rx <- paste(y, "~ state_factor + year_factor + pvt")
fit_no_mp <- plm(rx, data = states, subset = (State != "madhyapradesh"), index = "state_factor")
summary(fit_no_mp)
}
outcomes <- str_subset(names(states), "^std.*all$")
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states <- states %>% filter
for (y in outcomes) {
rx <- paste(y, "~ state_factor + year_factor + pvt")
fit_no_mp <- plm(rx, data = states, subset = (State != "madhyapradesh"), index = "state_factor")
print(summary(fit_no_mp) )
}
tidy(fit_no_mp)
str(tidy(fit_no_mp))
source('~/code/notebooks/temp - ICMR surveillance testing.R', echo=TRUE)
num_covid*prop_asymp/baseline_pne
source('~/code/notebooks/temp - ICMR surveillance testing.R', echo=TRUE)
prob_positive
?broom
glance(fit_no_mp)
lag
dplyr::lag
library(plm)
lag
outcomes <- str_subset(names(states), "^std.*all$")
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states <- states %>% filter
for (y in outcomes) {
# create string of formula.
rx <- paste(y, "~ state_factor + year_factor + pvt")
fit_no_mp <- plm(rx, data = states, subset = (State != "madhyapradesh"), index = "state_factor")
fit_no_mp_tidy <- broom(fit_no_mp)
fit_with_mp <- plm(rx, data = states, subset = (State != "madhyapradesh"), index = "state_factor")
}
outcomes <- str_subset(names(states), "^std.*all$")
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states <- states %>% filter
for (y in outcomes) {
# create string of formula.
rx <- paste(y, "~ state_factor + year_factor + pvt")
fit_no_mp <- plm(rx, data = states, subset = (State != "madhyapradesh"), index = "state_factor")
fit_no_mp_tidy <- tidy(fit_no_mp)
print(fit_no_mp_tidy[fit_no_mp_tidy$term == "pvt"])
fit_with_mp <- plm(rx, data = states, subset = (State != "madhyapradesh"), index = "state_factor")
}
fit_no_mp_tidy
fit_no_mp_tidy[fit_no_mp_tidy$term == "pvt"]
fit_no_mp_tidy[,fit_no_mp_tidy$term == "pvt"]
fit_no_mp_tidy[fit_no_mp_tidy$term == "pvt",]
outcomes <- str_subset(names(states), "^std.*all$")
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states <- states %>% filter
for (y in outcomes) {
# create string of formula.
rx <- paste(y, "~ state_factor + year_factor + pvt")
fit_no_mp <- plm(rx, data = states, subset = (State != "madhyapradesh"), index = "state_factor")
fit_no_mp_tidy <- tidy(fit_no_mp)
print(fit_no_mp_tidy[fit_no_mp_tidy$term == "pvt",])
fit_with_mp <- plm(rx, data = states, subset = (State != "madhyapradesh"), index = "state_factor")
}
outcomes <- str_subset(names(states), "^std.*all$")
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states <- states %>% filter
for (y in outcomes) {
# create string of formula.
rx <- paste(y, "~ state_factor + year_factor + pvt")
fit_no_mp <- plm(rx, data = states, subset = (State != "madhyapradesh"), index = "state_factor")
fit_no_mp_tidy <- tidy(fit_no_mp)
print(fit_no_mp_tidy[fit_no_mp_tidy$term == "pvt",])
fit_with_mp <- plm(rx, data = states, subset = (State != "madhyapradesh"), index = "state_factor")
}
outcomes <- str_subset(names(states), "^std.*all$")
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states <- states %>% filter
for (y in outcomes) {
print(y)
# create string of formula.
rx <- paste(y, "~ state_factor + year_factor + pvt")
fit_no_mp <- plm(rx, data = states, subset = (State != "madhyapradesh"), index = "state_factor")
fit_no_mp_tidy <- tidy(fit_no_mp)
print(fit_no_mp_tidy[fit_no_mp_tidy$term == "pvt",])
fit_with_mp <- plm(rx, data = states, subset = (State != "madhyapradesh"), index = "state_factor")
}
outcomes <- str_subset(names(states), "^std.*all$")
states <- states %>%
mutate(state_factor = as.factor(State), year_factor = as.factor(year))
# remove MP since it is a big outlier
states <- states %>% filter
for (y in outcomes) {
print(y)
# create string of formula.
rx <- paste(y, "~ state_factor + pvt")
print("Without MP")
fit_no_mp <- plm(rx, data = states, subset = (State != "madhyapradesh"), index = "state_factor")
fit_no_mp_tidy <- tidy(fit_no_mp)
print(fit_no_mp_tidy[fit_no_mp_tidy$term == "pvt",])
print("With MP")
fit_with_mp <- plm(rx, data = states, index = "state_factor")
fit_tidy <- tidy(fit_no_mp)
print(fit_no_mp_tidy[fit_no_mp_tidy$term == "pvt",])
}
library(tidyverse)
library(broom)
data_path <- "C:/Users/dougj/Documents/Data/Education"
states <- read_csv(file.path(data_path, "ASER trends over time", "aser_trends.csv"))
states
mean(states$pvt_girls)
mean(states$pvt_girls, na.rm = TRUE)
mean(states$pvt_boys, na.rm = TRUE)
library(tidyverse)
library(broom)
data_path <- "C:/Users/dougj/Documents/Data/Education"
states <- read_csv(file.path(data_path, "ASER trends over time", "aser_trends.csv"))
# Select just a few var types
states_select <- states %>%
select("std3_read_std1_all", "pvt", "State", "year")
# reshape to long
states_long <- states_select %>%
pivot_longer(cols = setdiff(names(.),c("State", "year")), names_to = "series", values_to = "pct")
# Randomly sample one state
# state <- sample(unique(states$State),1)
#state <- "madhyapradesh"
# one_state <- states_long %>% filter(State == state)
for (state in unique(states$State)) {
one_state <- states_long %>% filter(State == state)
g <- ggplot(one_state, aes(x = year, y = pct, color = series)) +
geom_line() +
ylim(c(0,1)) +
labs(title = state)
print(g)
}
states <- states %>%
mutate(gender_diff =pvt_boys - pvt_girls,
state_factor = as.factor(State),
year_factor = as.factor(year))
fit <- lm(gender_diff ~ 0 + state_factor + year_factor, data = states)
summary(fit)
states <- states %>%
mutate(gender_diff =pvt_boys - pvt_girls,
state_factor = as.factor(State),
year_factor = as.factor(year))
fit <- lm(gender_diff ~ 0 + state_factor + year_factor, data = states)
tidy_fit <- broom(fit)
states <- states %>%
mutate(gender_diff =pvt_boys - pvt_girls,
state_factor = as.factor(State),
year_factor = as.factor(year))
fit <- lm(gender_diff ~ 0 + state_factor + year_factor, data = states)
tidy_fit <- tidy(fit)
tidy_fit
summary(fit)
View(tidy_fit)
View(tidy_fit)
